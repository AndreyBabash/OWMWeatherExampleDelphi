unit Main;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants,
  FMX.Types, FMX.Controls, FMX.Forms, FMX.Graphics, FMX.Dialogs,
  FMX.Controls.Presentation, FMX.StdCtrls, FMX.ListBox, FMX.Layouts, FMX.Edit,
  FMX.ComboEdit, System.Net.URLClient, System.Net.HttpClient, System.Net.HttpClientComponent, FMX.Memo, Json,
  FMX.ScrollBox;

type
  TForm1 = class(TForm)
    ToolBar1: TToolBar;
    Label1: TLabel;
    labelCountry: TLabel;
    Label2: TLabel;
    humidityLabel: TLabel;
    pressureLabel: TLabel;
    cloudBtn: TLabel;
    lonLabel: TLabel;
    labelCity: TLabel;
    btnGetWeather: TButton;
    ScrollBox1: TScrollBox;
    CityBox: TComboEdit;
    Label3: TLabel;
    Label4: TLabel;
    ResponseField: TMemo;
    Label5: TLabel;
    procedure FormCreate(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
    responsejson:string;
  end;

var
  Form1: TForm1;

implementation

{$R *.fmx}

// Функция для получения данных от сервера (ответ в формате Json)
function idHttpGet(const aURL: string): string;
// uses  System.Net.HttpClient, System.Net.HttpClientComponent, System.Net.URLClient;
var
  Resp: TStringStream;
  Return: IHTTPResponse;
begin
  Result := '';
  with TNetHTTPClient.Create(nil) do
  begin
    Resp := TStringStream.Create('', TEncoding.ANSI);
    Return := Get( { TURI.URLEncode } (aURL), Resp);
    Result := Resp.DataString;
    Resp.Free;
    Free;
  end;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
  Toolbar1.TintColor:=TAlphaColors.Green;
end;

end.
